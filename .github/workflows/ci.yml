name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install additional dev dependencies
        pip install ruff  # For linting
    
    - name: Run Python linting with Ruff
      run: |
        cd backend
        ruff check . --output-format=github
        ruff format --check .
    
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest tests/ -v --tb=short
      env:
        SECRET_KEY: test-secret-key
        ENV: testing

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run ESLint
      run: |
        cd frontend
        npm run lint
    
    - name: Check TypeScript types
      run: |
        cd frontend
        npx tsc --noEmit
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        VITE_BASE_URL: http://localhost:5000/

  integration-check:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        VITE_BASE_URL: http://localhost:5000/
    
    - name: Start backend for integration test
      run: |
        cd backend
        python -m flask --app backend.app:deploy_app run --host=0.0.0.0 --port=5000 &
        sleep 5  # Give the server time to start
      env:
        SECRET_KEY: test-secret-key
        ENV: testing
    
    - name: Check backend health
      run: |
        curl -f http://localhost:5000/ || exit 1
    
    - name: Kill background processes
      run: |
        pkill -f flask || true